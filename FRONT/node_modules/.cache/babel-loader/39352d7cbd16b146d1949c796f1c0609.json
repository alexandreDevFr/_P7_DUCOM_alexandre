{"ast":null,"code":"import HeaderView from '@/views/HeaderView.vue';\nexport default {\n  name: 'HelloWorld',\n  data: () => ({\n    email: '',\n    password: '',\n    errorAlert: false,\n    errorAlertMessage: '',\n    errorSuccess: false,\n    errorSuccessMessage: ''\n  }),\n  methods: {\n    logIn: function () {\n      fetch('http://localhost:3000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.email,\n          password: this.password\n        })\n      }).then(response => response.json()).then(data => {\n        console.log(status);\n        localStorage.setItem('token', JSON.stringify(data.token));\n        localStorage.setItem('userId', JSON.stringify(data.userId));\n        this.errorSuccess = true;\n        this.errorSuccessMessage = 'Connexion réussis !';\n      }).catch(error => console.log(\"Erreur : \" + error));\n    }\n  },\n  components: {\n    HeaderView\n  }\n};","map":{"version":3,"mappings":"AA0BA,OAAOA,UAAP,MAAuB,wBAAvB;AAEA,eAAe;EACbC,IAAI,EAAE,YADO;EAEbC,IAAI,EAAE,OAAO;IACTC,KAAK,EAAE,EADE;IAETC,QAAQ,EAAE,EAFD;IAGTC,UAAU,EAAE,KAHH;IAITC,iBAAiB,EAAE,EAJV;IAKTC,YAAY,EAAE,KALL;IAMTC,mBAAmB,EAAE;EANZ,CAAP,CAFO;EAUbC,OAAO,EAAE;IACNC,KAAK,EAAE,YAAW;MAChBC,KAAK,CAAC,sCAAD,EAAyC;QAC5CC,MAAM,EAAE,MADoC;QAE5CC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFmC;QAG5CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJ;UACEb,KAAK,EAAE,KAAKA,KADd;UAEEC,QAAQ,EAAE,KAAKA;QAFjB,CADI;MAHsC,CAAzC,CAAL,CASCa,IATD,CASMC,QAAO,IAAKA,QAAQ,CAACC,IAAT,EATlB,EAUCF,IAVD,CAUMf,IAAG,IAAK;QAEZkB,OAAO,CAACC,GAAR,CAAYC,MAAZ;QACAC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,IAAI,CAACC,SAAL,CAAed,IAAI,CAACuB,KAApB,CAA9B;QACAF,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA+BT,IAAI,CAACC,SAAL,CAAed,IAAI,CAACwB,MAApB,CAA/B;QACA,KAAKnB,YAAL,GAAoB,IAApB;QACA,KAAKC,mBAAL,GAA2B,qBAA3B;MACD,CAjBD,EAkBCmB,KAlBD,CAkBOC,KAAI,IAAKR,OAAO,CAACC,GAAR,CAAY,cAAcO,KAA1B,CAlBhB;IAmBF;EArBM,CAVI;EAkCbC,UAAU,EAAE;IACV7B;EADU;AAlCC,CAAf","names":["HeaderView","name","data","email","password","errorAlert","errorAlertMessage","errorSuccess","errorSuccessMessage","methods","logIn","fetch","method","headers","body","JSON","stringify","then","response","json","console","log","status","localStorage","setItem","token","userId","catch","error","components"],"sourceRoot":"","sources":["C:\\Users\\Alex_PC\\Desktop\\P7_Projet\\_FRONT\\groupomania\\src\\views\\Connexion.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <HeaderView />\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"post\">\r\n      <div class=\"post_head\">\r\n        <p>Connexion</p>\r\n      </div>\r\n      <!-- <div v-if=\"errorAlert\" class=\"alert_error\" id=\"alert\"><a>L'utilisateur a déjà liké le post !</a></div> -->\r\n      <div v-if=\"errorAlert\" class=\"alert_error\" id=\"alert\"><a>{{ errorAlertMessage }}</a></div>\r\n      <div v-if=\"errorSuccess\" class=\"alert_succes\" id=\"alert\"><a>{{ errorSuccessMessage }}</a></div>\r\n      <div class=\"post_body\">\r\n        <p>Email</p>\r\n        <input v-model=\"email\" type=\"email\" placeholder=\"Email\" required>\r\n        <p>Mot de passe</p>\r\n        <input v-model=\"password\" type=\"password\" placeholder=\"Mot de passe\" required>\r\n        <p class=\"already\">Pas de compte ? Inscrivez-vous <a><router-link to=\"/inscription\">ici</router-link></a></p>\r\n        <button @click.prevent=\"logIn()\">Connexion</button>\r\n      </div>\r\n      <router-view />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HeaderView from '@/views/HeaderView.vue';\r\n\r\nexport default {\r\n  name: 'HelloWorld',\r\n  data: () => ({\r\n      email: '',\r\n      password: '',\r\n      errorAlert: false,\r\n      errorAlertMessage: '',\r\n      errorSuccess: false,\r\n      errorSuccessMessage: '',\r\n  }),\r\n  methods: {\r\n     logIn: function (){\r\n       fetch('http://localhost:3000/api/auth/login', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify(\r\n           {\r\n             email: this.email, \r\n             password: this.password \r\n           })\r\n       })\r\n       .then(response => response.json())\r\n       .then(data => {\r\n       \r\n         console.log(status)\r\n         localStorage.setItem('token', JSON.stringify(data.token));\r\n         localStorage.setItem('userId', JSON.stringify(data.userId));\r\n         this.errorSuccess = true\r\n         this.errorSuccessMessage = 'Connexion réussis !'\r\n       })\r\n       .catch(error => console.log(\"Erreur : \" + error));\r\n     }\r\n  },\r\n\r\n  components: {\r\n    HeaderView\r\n  },\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 50px;\r\n}\r\n\r\n.post{\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 500px;\r\n  margin-bottom: 50px;\r\n   box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n}\r\n\r\n.post_head{\r\n  background-color: #4E5166 ;\r\n  text-align: center;\r\n}\r\n\r\n.post_head p{\r\n  color: white;\r\n  padding: 8px;\r\n  padding-left: 24px;\r\n}\r\n\r\n.post_body{\r\n  padding: 8px;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.post_body input{\r\n  width: 100%;\r\n  margin: 12px;\r\n  padding: 6px;\r\n}\r\n\r\n.post_body button{\r\n  background-color: #FD2D01;\r\n  border: 0;\r\n  padding: 6px;\r\n}\r\n\r\n.post_body button a{\r\n  text-decoration: none;\r\n  color: #fff;\r\n  font-size: 16px;\r\n}\r\n\r\n.post_body .already{\r\n  padding: 8px;\r\n}\r\n\r\n.post_body .already a{\r\n  color: #FD2D01;\r\n}\r\n.alert_error{\r\n  background-color: #FFD7D7;\r\n  padding: 12px;\r\n  margin-top: 12px;\r\n  text-align: center;\r\n}\r\n\r\n.alert_succes{\r\n  background-color: #73a918;\r\n  padding: 12px;\r\n  margin-top: 12px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}