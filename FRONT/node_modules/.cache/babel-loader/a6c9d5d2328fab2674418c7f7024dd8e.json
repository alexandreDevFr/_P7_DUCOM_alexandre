{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Dashboard from '@/views/DashBoard.vue';\nimport Connexion from '@/views/Connexion.vue';\nimport Inscription from '@/views/Inscription.vue';\nimport store from '@/store/index.js';\nimport { IS_USER_AUTHENTICATE_GETTER } from '@/store/storeconstants.js';\nconst routes = [{\n  name: 'DashBoard',\n  path: '/',\n  component: Dashboard\n}, {\n  name: 'Connexion',\n  path: '/Connexion',\n  component: Connexion\n}, {\n  name: 'Inscription',\n  path: '/Inscription',\n  component: Inscription\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // if(\n  //     to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATE_GETTER}`]\n  // ){\n  //     next('/connexion');\n  // } else if (\n  //     !to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATE_GETTER}`]\n  // ){\n  //     next('/');\n  // } else{\n  //     next();\n  // }\n  console.log(to.path);\n\n  if (to.path === '/' && JSON.parse(localStorage.getItem('token')) === null) {\n    this.$route.push('/connexion');\n  }\n\n  console.log(to.path, from.path);\n  next();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Dashboard","Connexion","Inscription","store","IS_USER_AUTHENTICATE_GETTER","routes","name","path","component","router","history","beforeEach","to","from","next","console","log","JSON","parse","localStorage","getItem","$route","push"],"sources":["C:/Users/Alex_PC/Desktop/P7_Projet/_FRONT/groupomania/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory} from 'vue-router';\r\nimport Dashboard from '@/views/DashBoard.vue';\r\nimport Connexion from '@/views/Connexion.vue';\r\nimport Inscription from '@/views/Inscription.vue';\r\nimport store from '@/store/index.js'\r\nimport { IS_USER_AUTHENTICATE_GETTER } from '@/store/storeconstants.js'\r\n\r\nconst routes = [\r\n    { name: 'DashBoard', path: '/', component: Dashboard,},\r\n    { name: 'Connexion', path: '/Connexion', component: Connexion,},\r\n    { name: 'Inscription', path: '/Inscription', component: Inscription,},\r\n];\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes,\r\n})\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    // if(\r\n    //     to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATE_GETTER}`]\r\n    // ){\r\n    //     next('/connexion');\r\n    // } else if (\r\n    //     !to.meta.auth && !store.getters[`auth/${IS_USER_AUTHENTICATE_GETTER}`]\r\n    // ){\r\n    //     next('/');\r\n    // } else{\r\n    //     next();\r\n    // }\r\n\r\n    console.log(to.path, )\r\n\r\n    if(to.path === '/' && JSON.parse(localStorage.getItem('token')) === null) {\r\n        this.$route.push('/connexion')\r\n    }\r\n\r\n    console.log(to.path, from.path)\r\n\r\n    next();\r\n});\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,QAA8C,YAA9C;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,2BAAT,QAA4C,2BAA5C;AAEA,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,WAAR;EAAqBC,IAAI,EAAE,GAA3B;EAAgCC,SAAS,EAAER;AAA3C,CADW,EAEX;EAAEM,IAAI,EAAE,WAAR;EAAqBC,IAAI,EAAE,YAA3B;EAAyCC,SAAS,EAAEP;AAApD,CAFW,EAGX;EAAEK,IAAI,EAAE,aAAR;EAAuBC,IAAI,EAAE,cAA7B;EAA6CC,SAAS,EAAEN;AAAxD,CAHW,CAAf;AAMA,MAAMO,MAAM,GAAGX,YAAY,CAAC;EACxBY,OAAO,EAAEX,gBAAgB,EADD;EAExBM;AAFwB,CAAD,CAA3B;AAKAI,MAAM,CAACE,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC,OAAO,CAACC,GAAR,CAAYJ,EAAE,CAACL,IAAf;;EAEA,IAAGK,EAAE,CAACL,IAAH,KAAY,GAAZ,IAAmBU,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,MAA8C,IAApE,EAA0E;IACtE,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,YAAjB;EACH;;EAEDP,OAAO,CAACC,GAAR,CAAYJ,EAAE,CAACL,IAAf,EAAqBM,IAAI,CAACN,IAA1B;EAEAO,IAAI;AACP,CAtBD;AAwBA,eAAeL,MAAf"},"metadata":{},"sourceType":"module"}