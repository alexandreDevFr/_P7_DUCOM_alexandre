{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport HeaderView from '@/views/HeaderView.vue';\nimport ModifyComponent from '@/components/ModifyComponent.vue';\nimport VueRouter from 'vue-router';\nimport PostComponent from '@/components/PostComponent.vue';\nimport NewComponent from '@/components/NewComponent.vue';\nexport default {\n  name: 'HelloWorld',\n  props: ['modifPost'],\n  components: {\n    HeaderView,\n    ModifyComponent,\n    PostComponent,\n    NewComponent\n  },\n\n  data() {\n    return {\n      isNew: false,\n      isModify: false,\n      toModify: 0,\n      posts: [],\n      description: '',\n      image: '',\n      file: ''\n    };\n  },\n\n  methods: {\n    onToggleUpdate: function (id) {\n      this.toModify = id;\n      this.isModify = !this.isModify;\n    },\n    DelPost: function (_id) {\n      fetch('http://localhost:3000/api/posts').then(res => res.json()).then(data => {\n        this.posts = data;\n      }).catch(err => console.log(err.message));\n      const userId = JSON.parse(localStorage.getItem(\"userId\"));\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      fetch('http://localhost:3000/api/posts/' + `${_id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + `${token}`\n        },\n        body: JSON.stringify({\n          userId: userId\n        })\n      }).then(response => {\n        response.json();\n        console.log(response); // this.$router.go()\n      }).catch(error => console.log(error));\n    },\n    Like: function (post) {\n      const userId = JSON.parse(localStorage.getItem(\"userId\"));\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      const postId = post._id;\n      const postusersLiked = JSON.stringify(post.usersLiked);\n      fetch('http://localhost:3000/api/posts/' + `${postId}` + '/like', {\n        method: 'POST',\n        headers: {\n          'Authorization': 'Bearer ' + `${token}`,\n          'Accept': 'application/json; charset=utf-8',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: userId,\n          like: postusersLiked.includes(userId) ? -1 : 1\n        })\n      }).then(response => response.json()).then(data => {\n        this.onRefresh();\n        console.log(data);\n      }).catch(error => console.log(error));\n    },\n    onRefresh: function () {\n      fetch('http://localhost:3000/api/posts').then(res => res.json()).then(data => this.posts = data).catch(err => console.log(err.message));\n    },\n    onFileChange: function (event) {\n      this.file = event.target.files[0];\n    }\n  },\n\n  mounted() {\n    this.onRefresh();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["HeaderView","ModifyComponent","VueRouter","PostComponent","NewComponent","name","props","components","data","isNew","isModify","toModify","posts","description","image","file","methods","onToggleUpdate","id","DelPost","_id","fetch","then","res","json","catch","err","console","log","message","userId","JSON","parse","localStorage","getItem","token","method","headers","body","stringify","response","error","Like","post","postId","postusersLiked","usersLiked","like","includes","onRefresh","onFileChange","event","target","files","mounted"],"sourceRoot":"","sources":["C:\\Users\\Alex_PC\\Desktop\\P7_Projet\\_FRONT\\groupomania\\src\\views\\DashBoard.vue"],"sourcesContent":["<template>\n  <div>\n    <HeaderView />\n  </div>\n  <div class=\"container\">\n\n    <PostComponent/>\n    \n    <div class=\"post_admin\">\n      <div class=\"post_head_admin\">\n        <p>John DOE le 30/08/2019</p>\n        <div class=\"badge\"><p>Administrateur</p></div>\n      </div>\n      <div class=\"post_body\">\n        <img src=\"@/assets/logo.png\" alt=\"\">\n        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Maxime mollitia,\n            molestiae quas vel sint commodi repudiandae consequuntur voluptatum laborum\n            numquam blanditiis harum quisquam eius sed odit fugiat iusto fuga praesentium\n            optio, eaque rerum! Provident similique accusantium nemo autem. Veritatis\n            obcaecati tenetur iure eius earum ut molestias architecto voluptate aliquam\n            nihil, eveniet aliquid culpa officia aut! Impedit sit sunt quaerat, odit,\n            tenetur error, harum nesciunt ipsum debitis quas aliquid.</p>\n      </div>\n      <div class=\"post_footer\">\n        <div class=\"post_footer_review\">\n          <a href=\"\"><i class=\"fa-solid fa-thumbs-up like\"></i><p> (0)</p></a>\n          <a href=\"\"><i class=\"fa-solid fa-thumbs-down dislike\"></i><p> (3)</p></a>\n        </div>\n        <div class=\"post_footer_modify\">\n          <a v-on:click=\"isModify = !isModify\">Modifier</a>\n          <a>Supprimer</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  <NewComponent/>\n  <ModifyComponent\n    v-if=\"isModify\"\n    :onClose=\"onToggleUpdate\"\n    :postId=\"toModify\"\n    :onRefresh=\"onRefresh\"\n   />\n</template>\n\n<script>\nimport HeaderView from '@/views/HeaderView.vue';\nimport ModifyComponent from '@/components/ModifyComponent.vue';\nimport VueRouter from 'vue-router';\nimport PostComponent from '@/components/PostComponent.vue';\nimport NewComponent from '@/components/NewComponent.vue';\n\nexport default {\n  name: 'HelloWorld',\n  props: ['modifPost'],\n  components: {\n    HeaderView,\n    ModifyComponent,\n    PostComponent,\n    NewComponent,\n  },\n  data(){\n    return{\n     isNew: false,\n     isModify: false,\n     toModify: 0,\n     posts: [],\n     description: '',\n     image: '',\n     file: '',\n    }\n  },\n  methods: {\n    onToggleUpdate: function(id) {\n      this.toModify = id\n      this.isModify = !this.isModify\n    },\n    DelPost: function (_id) {\n      fetch('http://localhost:3000/api/posts')\n      .then(res => res.json())\n      .then(data => {\n        this.posts = data\n      })\n      .catch(err => console.log(err.message))\n      const userId = JSON.parse(localStorage.getItem(\"userId\"));\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      fetch('http://localhost:3000/api/posts/'+ `${_id}`, {\n        method: 'DELETE',\n        headers: { \n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + `${token}`\n        },\n        body: JSON.stringify(\n          {\n            userId: userId,\n          })\n      })\n      .then(response => {\n        response.json()\n        console.log(response)\n        // this.$router.go()\n      })\n      .catch(error => console.log(error))\n    },\n    Like: function(post) {\n\n      const userId = JSON.parse(localStorage.getItem(\"userId\"));\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      const postId = post._id;\n      const postusersLiked = JSON.stringify(post.usersLiked);\n\n        fetch('http://localhost:3000/api/posts/'+ `${postId}` + '/like', {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + `${token}`,\n            'Accept': 'application/json; charset=utf-8',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n          {\n            userId: userId,\n            like : postusersLiked.includes(userId) ? -1 : 1,\n          })\n      })\n      .then(response => response.json())\n      .then(data => {\n        this.onRefresh()\n        console.log(data)\n      })\n      .catch(error => console.log(error));\n\n\n    },\n\n    onRefresh: function() {\n      fetch('http://localhost:3000/api/posts')\n      .then(res => res.json())\n      .then(data => this.posts = data)\n      .catch(err => console.log(err.message))\n    },\n\n    onFileChange: function( event ){\n      this.file = event.target.files[0];\n    },\n    \n  },\n\n  mounted(){\n    this.onRefresh()\n  },\n}\n\n</script>\n\n<style scoped>\n\n.container{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 50px;\n}\n.post{\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin-bottom: 50px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.post_head{\n  background-color: #4E5166 ;\n}\n\n.post_head p{\n  color: white;\n  padding: 8px;\n  padding-left: 24px;\n}\n\n.post_body{\n  padding: 8px;\n  padding-left: 24px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.post_body img{\n  width: 400px;\n}\n\n.post_body p{\n  font-size: 16px;\n}\n\n.post_footer{\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px;\n  padding-left: 24px;\n}\n\n.post_footer_review{\n  display: flex;\n}\n\n.post_footer_review a{\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n}\n\n.post_footer_review i{\n  font-size: 22px;\n}\n\n.post_footer_modify a{\n  text-decoration: underline;\n}\n\n.like{\n  color: #FFD7D7;\n}\n\n.post_footer{\n  color: #FD2D01;\n  font-size: 18px;\n}\n\n.post_footer p{\n  padding: 6px;\n}\n\n.post_footer a{\n  color: #FD2D01;\n  padding: 6px;\n}\n\n.post_admin{\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin-bottom: 50px;\n   box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n}\n\n.post_head_admin{\n  background-color: #FFD7D7 ;\n  display: flex;\n  justify-content: space-between;\n}\n\n.post_head_admin p{\n  color: #FD2D01;\n  padding: 8px;\n  padding-left: 24px;\n}\n\n.post_head_admin .badge p{\n  background-color: #fff;\n  padding: 0;\n  margin-top: 8px;\n  margin-right: 10px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.new_modal{\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  margin-bottom: 120px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin-right: 40px;\n  background-color: #fff;\n}\n\n.new_modal_box_head{\n  background-color: #4E5166 ;\n  display: flex;\n  justify-content: space-between;\n}\n\n.new_modal_box_head p{\n  padding: 8px;\n  padding-left: 24px;\n  color: white;;\n}\n\n.new_modal_box__body{\n  padding: 8px;\n  margin-left: 36px;\n  margin-right: 36px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start\n}\n\n.new_modal_box__body input{\n  width: 100%;\n  padding-bottom: 140px;\n  padding-top: 20px;\n  padding-left: 20px;\n}\n\n.new_modal_box_body_image input{\n  padding: 0;\n}\n\n.new_modal_box_footer{\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 8px;\n  padding-left: 24px;\n}\n\n.new_modal_box_footer button{\n    background-color: #FD2D01;\n    border: 0;\n    padding: 6px;\n    margin-right: 36px;\n    margin-bottom: 24px;\n}\n\n.new_modal_box_footer a{\n    color: white;\n    text-transform: uppercase;\n    font-size: 14px;\n    padding-left: 20px;\n    padding-right: 20px;\n    text-decoration: none;\n}\n\n.new{\n  height: 64px;\n  width: 64px;\n  font-size: 64px;\n  background-color: #FD2D01;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  border-radius: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  margin-right: 40px;\n  cursor: pointer;\n}\n\n.new a{\n  color: #fff;\n  margin-top: -10px;\n  text-decoration: none;\n}\n\n\n\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}