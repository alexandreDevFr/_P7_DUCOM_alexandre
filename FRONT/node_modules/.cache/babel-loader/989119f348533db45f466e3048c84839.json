{"ast":null,"code":"// import Axios from 'axios';\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {},\n  getters: {},\n  mutations: {},\n  actions: {\n    REGISTER: ({\n      commit\n    }, {\n      username,\n      email,\n      password\n    }) => {\n      return new Promise((resolve, reject) => {\n        fetch(`signup`, {\n          method: \"POST\",\n          body: JSON.stringify({\n            username,\n            email,\n            password\n          })\n        }).then(response => response.json()).then(data => {}).catch(error => console.log(error)); //   Axios.post(`signup`, {\n        //     username, email, password\n        //   })\n        //   .then(({data, status}) => {\n        //     if (status === 201) {\n        //       resolve(true);\n        //     }\n        //   })\n        //   .catch(error => {\n        //     reject(error);\n        //   })\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","getters","mutations","actions","REGISTER","commit","username","email","password","Promise","resolve","reject","fetch","method","body","JSON","stringify","then","response","json","data","catch","error","console","log","modules"],"sources":["C:/Users/Alex_PC/Desktop/P7_Projet/_FRONT/groupomania/src/store/index.js"],"sourcesContent":["// import Axios from 'axios';\n\nimport { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n  },\n  getters: {\n  },\n  mutations: {\n  },\n  actions: {\n    REGISTER: ({ commit }, {username, email, password}) => {\n        return new Promise((resolve, reject) => {\n          fetch(`signup`, {\n            method: \"POST\",\n            body: JSON.stringify({username, email, password})\n          })\n          .then(response => response.json())\n          .then(data => {\n            \n          })\n          .catch(error => console.log(error))\n        //   Axios.post(`signup`, {\n        //     username, email, password\n        //   })\n        //   .then(({data, status}) => {\n        //     if (status === 201) {\n        //       resolve(true);\n        //     }\n        //   })\n        //   .catch(error => {\n        //     reject(error);\n        //   })\n        });\n    }\n  },\n  modules: {\n  }\n})\n\n\n\n"],"mappings":"AAAA;AAEA,SAASA,WAAT,QAA4B,MAA5B;AAEA,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE,EADkB;EAGzBC,OAAO,EAAE,EAHgB;EAKzBC,SAAS,EAAE,EALc;EAOzBC,OAAO,EAAE;IACPC,QAAQ,EAAE,CAAC;MAAEC;IAAF,CAAD,EAAa;MAACC,QAAD;MAAWC,KAAX;MAAkBC;IAAlB,CAAb,KAA6C;MACnD,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;QACtCC,KAAK,CAAE,QAAF,EAAW;UACdC,MAAM,EAAE,MADM;UAEdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;YAACV,QAAD;YAAWC,KAAX;YAAkBC;UAAlB,CAAf;QAFQ,CAAX,CAAL,CAICS,IAJD,CAIMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJlB,EAKCF,IALD,CAKMG,IAAI,IAAI,CAEb,CAPD,EAQCC,KARD,CAQOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARhB,EADsC,CAUxC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACC,CArBM,CAAP;IAsBH;EAxBM,CAPgB;EAiCzBG,OAAO,EAAE;AAjCgB,CAAD,CAA1B"},"metadata":{},"sourceType":"module"}